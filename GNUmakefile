#
# DO NOT EDIT
#
# This makefile was automatically generated by createBuildSystem.scro.
#
# Edit the file 'Package' located in the same directory to change settings.
#

ifdef PARALLELFLAGS
    $(warning PARALLELFLAGS is no longer supported.  Use 'make -j N' instead.)
endif

# Define V if you want verbose output, e.g. run 'V=1 make'.
ifdef V
    TAR_VERBOSE=v
else
    QUIET=@
endif

.DELETE_ON_ERROR:

.PHONY: gotoTarget checkArch clean dep depclean copy bin lib

# Canceling implicit rules
%.o : %.c
%.o : %.cpp
%.o : %.cc
%.o : %.C
%.o : %.p
%.o : %.r
%.o : %.f
%.o : %.F
%.sym : %.def
%.o : %.mod
%.o : %.s
%.s : %.S
% : %.o
%.c : %.y
%.c : %.l
%.r : %.l
%.nl : %c
%.dvi : %.tex
%.tex : %.web
%.tex : %.w
%.p : %.web
%.c : %.w
%.dvi : %.texinfo
%.dvi : %.texi
%.dvi : %.txinfo
%.info : %.texinfo
%.info : %.texi
%.info : %.txinfo

# The default target.
default all: copy dep lib

# The name of this package.
PACKAGE = Obj_Importer
TARGET = Obj_Importer

# The main directories.
BUILDROOT = ../..
PRODUCTROOT = ../../.
INTERMEDIATEROOT = ../../obj
MAINROOT = /Applications/Amira-5.4.2
DEVTOOLSDIR = /Applications/Amira-5.4.2/share/devtools

# Some helper commands.
COPY_CMD = cp
BISON = bison
FLEX = flex
RANLIB = ranlib
MOC = $(PRODUCTROOT)/bin/arch-$(MAKE_UNAME)-Optimize/moc
UIC = $(PRODUCTROOT)/bin/arch-$(MAKE_UNAME)-Optimize/uic
RCC = $(PRODUCTROOT)/bin/arch-$(MAKE_UNAME)-Optimize/rcc
ROC = $(PRODUCTROOT)/bin/roc
TAGLIB = $(PRODUCTROOT)/bin/taglib
SOAPCPP2 = $(PRODUCTROOT)/bin/soapcpp2
NVCC = $(PRODUCTROOT)/bin/arch-$(MAKE_UNAME)/cuda/bin/nvcc
COPY_SECURE = $(PRODUCTROOT)/bin/arch-$(MAKE_UNAME)-$(MAKE_CFG)/bin2c

DIRNAME=$(shell basename "$(CURDIR)")

# The configuration and architecture.
MAKE_CFG ?= Debug

uname_s := $(shell sh -c 'uname -s 2>/dev/null || echo unknown')
uname_m := $(shell sh -c 'uname -m 2>/dev/null || echo unknown')

ifeq ($(uname_s),Linux)
    ifeq ($(uname_m),x86_64)
        MAKE_UNAME = LinuxAMD64
    else
    ifeq ($(uname_m),i686)
        MAKE_UNAME = Linux
    else
        ifeq ($(uname_m),ia64)
            MAKE_UNAME = Linux64
        else
            $(error Unknown Linux machine type '$(uname_m)'.)
        endif
    endif
    endif
else
    ifeq ($(uname_s),Darwin)
        MAKE_UNAME = MacX
    else
        ifeq ($(uname_s),SunOS)
            MAKE_UNAME = SunOS64
        else
            $(error Unknown operating system '$(uname_s)'.)
        endif
    endif
endif

ARCH=arch-$(MAKE_UNAME)-$(MAKE_CFG)


# The architecture specific setup.
ifeq ($(MAKE_UNAME),MacX)
    HX_COMPILER_gcc42 = 1
    CC = gcc
    CXX = g++

    LD = $(CXX)
    MAKEDEP = $(CXX) $(INCLUDES) $(DEFINES) $(HXFLAGS) -MM -MF $@ -MT $(basename $@).o $<

    HX_ARCH_FLAGS =
    HXFLAGS =

ifndef HX_EXCLUDEISA_i386
    HX_ARCH_FLAGS += -arch i386
    HXFLAGS += -Xarch_i386 -DHX_LITTLE_ENDIAN -m32
endif

ifdef HX_COMPILER_gcc42
    LDFLAGS += -fopenmp
    HXFLAGS += -fopenmp
endif 

    LDFLAGS += $(HX_ARCH_FLAGS)
    CFLAGS += $(HX_ARCH_FLAGS)
    CXXFLAGS += $(HX_ARCH_FLAGS)

    CFLAGS += -dynamiclib -fPIC -fno-common
    CXXFLAGS += -dynamiclib -fPIC -fno-common

    CFLAGS += -msse -msse2
    CXXFLAGS += -msse -msse2

    HXSYSROOT = -mmacosx-version-min=10.5

    HXFLAGS += -Wall -Wno-unknown-pragmas  -pipe $(HXSYSROOT)
    
    CXXFLAGS += $(HXFLAGS)
    CFLAGS += $(HXFLAGS)

    LD_SHARED += -shared-libgcc -dynamiclib -flat_namespace -single_module -headerpad_max_install_names
    SHARED_EXT = dylib
    LINK_BIN = $(LD) $(LDFLAGS)

    LDFLAGS += -framework CoreServices -framework CoreFoundation -framework IOKit -framework ApplicationServices  $(HXSYSROOT)

    CXXFLAGS += -fexceptions
    CXXFLAGS += -frounding-math

    PYTHON_EXT = so
  ifeq ($(MAKE_CFG),Debug)

    CFLAGS    += -g -D_DEBUG
    CXXFLAGS  += -g -D_DEBUG -DTBB_USE_DEBUG
  endif
  ifeq ($(MAKE_CFG),Optimize)

    CFLAGS    += -O2 -DNDEBUG
    CXXFLAGS  += -O2 -DNDEBUG
  endif
endif

ifeq ($(MAKE_CFG),Debug)
    BISONFLAGS = --debug
    FLEXFLAGS = -d
endif

# The include paths for each configuration.
ifeq ($(MAKE_UNAME),MacX)
  ifeq ($(MAKE_CFG),Debug)
    INCLUDES += -I../../src
    INCLUDES += -I/Applications/Amira-5.4.2/include
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/globus
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/oiv
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/ActiveQt
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/Qt
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/Qt3Support
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtAssistant
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtCore
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtDBus
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtDesigner
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtGui
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtNetwork
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtOpenGL
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtScript
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtSql
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtSvg
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtTest
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtUiTools
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtXml
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtXmlPatterns
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtWebKit
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/cuda
    INCLUDES += -I/System/Library/Frameworks/Carbon.framework/Headers
    INCLUDES += -I/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/Headers
    INCLUDES += -I/System/Library/Frameworks/vecLib.framework/Versions/A/Headers
    INCLUDES += -I/System/Library/Frameworks/Python.framework/Headers
    INCLUDES += -I/System/Library/Frameworks/Tcl.framework/Versions/Current/Headers/tcl-private
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Algorithms
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Common
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/BasicFilters
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/IO
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Numerics
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Numerics/FEM
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Numerics/NeuralNetworks
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Numerics/Statistics
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/SpatialObject
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/MetaIO
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/NrrdIO
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/expat
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/itkExtHdrs
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/vxl/core
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/vxl/vcl
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/vxl/v3p/netlib
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/gdcm
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/gdcm/src
  endif
  ifeq ($(MAKE_CFG),Optimize)
    INCLUDES += -I../../src
    INCLUDES += -I/Applications/Amira-5.4.2/include
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/globus
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/oiv
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/ActiveQt
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/Qt
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/Qt3Support
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtAssistant
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtCore
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtDBus
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtDesigner
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtGui
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtNetwork
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtOpenGL
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtScript
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtSql
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtSvg
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtTest
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtUiTools
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtXml
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtXmlPatterns
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/qt/QtWebKit
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/cuda
    INCLUDES += -I/System/Library/Frameworks/Carbon.framework/Headers
    INCLUDES += -I/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/Headers
    INCLUDES += -I/System/Library/Frameworks/vecLib.framework/Versions/A/Headers
    INCLUDES += -I/System/Library/Frameworks/Python.framework/Headers
    INCLUDES += -I/System/Library/Frameworks/Tcl.framework/Versions/Current/Headers/tcl-private
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Algorithms
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Common
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/BasicFilters
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/IO
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Numerics
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Numerics/FEM
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Numerics/NeuralNetworks
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Numerics/Statistics
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/SpatialObject
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/MetaIO
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/NrrdIO
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/expat
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/itkExtHdrs
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/vxl/core
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/vxl/vcl
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/vxl/v3p/netlib
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/gdcm
    INCLUDES += -I/Applications/Amira-5.4.2/include/arch-MacX/itk/Utilities/gdcm/src
  endif
endif

# Link against libs as specified in "--mainconfig Optimize".
LDFLAGS += -L$(MAINROOT)/lib/arch-$(MAKE_UNAME)-Optimize
HXRPATH += -Wl,-rpath,$(MAINROOT)/lib/arch-$(MAKE_UNAME)-Optimize

# Add the intermediate directory to the include paths.
INCLUDES += -I$(INTERMEDIATEROOT)/$(ARCH)

# Add includes to the C*FLAGS.
CXXFLAGS += $(INCLUDES)
CFLAGS += $(INCLUDES)

# The link command for shared libs.
LINK_SHARED = $(LD) $(LDFLAGS) $(LD_SHARED)

# The package specific paths.
BINDIR = $(PRODUCTROOT)/bin/$(ARCH)
LIBDIR = $(PRODUCTROOT)/lib/$(ARCH)
INTERMEDIATEDIR = $(INTERMEDIATEROOT)/$(ARCH)/$(PACKAGE)

# Dependency handling: Depenencies are only included for default target.
ifeq (,$(MAKECMDGOALS))
-include $(INTERMEDIATEDIR)/*.d
-include $(INTERMEDIATEDIR)/*/*.d
endif
# The libraries.
ifeq ($(MAKE_UNAME),MacX)
  ifeq ($(MAKE_CFG),Debug)
    LIBS += -lhxplot
    LIBS += -lhxtime
    LIBS += -lhxsurface
    LIBS += -lhxcolor
    LIBS += -lhxfield
    LIBS += -lhxcore
    LIBS += -lamiramesh
    LIBS += -lmclib
    LIBS += -lInventorBase
    LIBS += -lInventorGL
    LIBS += -lInventor
    LIBS += -lInventorImage
    LIBS += -lScaleViz
    LIBS += -lInventorGui
    LIBS += -lInventorQt4
    LIBS += -lFXViz
    LIBS += -lMeshViz
    LIBS += -lVolumeViz
    LIBS += -lLDM
    LIBS += -framework
    LIBS += OpenGL
    LIBS += -framework
    LIBS += AGL
    LIBS += -framework
    LIBS += Carbon
    LIBS += -framework
    LIBS += Tcl
    LIBS += -lhxitk
    LIBS += -lITKAlgorithms
    LIBS += -lITKBasicFilters
    LIBS += -lITKCommon
    LIBS += -lITKDICOMParser
    LIBS += -lITKEXPAT
    LIBS += -lITKFEM
    LIBS += -lITKIO
    LIBS += -lITKMetaIO
    LIBS += -lITKNrrdIO
    LIBS += -lITKNumerics
    LIBS += -lITKSpatialObject
    LIBS += -lITKStatistics
    LIBS += -lITKniftiio
    LIBS += -lITKznz
    LIBS += -litkNetlibSlatec
    LIBS += -litkgdcm
    LIBS += -litkjpeg12
    LIBS += -litkjpeg16
    LIBS += -litkjpeg8
    LIBS += -litkopenjpeg
    LIBS += -litkpng
    LIBS += -litksys
    LIBS += -litktiff
    LIBS += -litkv3p_netlib
    LIBS += -litkvcl
    LIBS += -litkvnl
    LIBS += -litkvnl_algo
    LIBS += -litkvnl_inst
    LIBS += -litkzlib
  endif
  ifeq ($(MAKE_CFG),Optimize)
    LIBS += -lhxplot
    LIBS += -lhxtime
    LIBS += -lhxsurface
    LIBS += -lhxcolor
    LIBS += -lhxfield
    LIBS += -lhxcore
    LIBS += -lamiramesh
    LIBS += -lmclib
    LIBS += -lInventorBase
    LIBS += -lInventorGL
    LIBS += -lInventor
    LIBS += -lInventorImage
    LIBS += -lScaleViz
    LIBS += -lInventorGui
    LIBS += -lInventorQt4
    LIBS += -lFXViz
    LIBS += -lMeshViz
    LIBS += -lVolumeViz
    LIBS += -lLDM
    LIBS += -framework
    LIBS += OpenGL
    LIBS += -framework
    LIBS += AGL
    LIBS += -framework
    LIBS += Carbon
    LIBS += -framework
    LIBS += Tcl
    LIBS += -lhxitk
    LIBS += -lITKAlgorithms
    LIBS += -lITKBasicFilters
    LIBS += -lITKCommon
    LIBS += -lITKDICOMParser
    LIBS += -lITKEXPAT
    LIBS += -lITKFEM
    LIBS += -lITKIO
    LIBS += -lITKMetaIO
    LIBS += -lITKNrrdIO
    LIBS += -lITKNumerics
    LIBS += -lITKSpatialObject
    LIBS += -lITKStatistics
    LIBS += -lITKniftiio
    LIBS += -lITKznz
    LIBS += -litkNetlibSlatec
    LIBS += -litkgdcm
    LIBS += -litkjpeg12
    LIBS += -litkjpeg16
    LIBS += -litkjpeg8
    LIBS += -litkopenjpeg
    LIBS += -litkpng
    LIBS += -litksys
    LIBS += -litktiff
    LIBS += -litkv3p_netlib
    LIBS += -litkvcl
    LIBS += -litkvnl
    LIBS += -litkvnl_algo
    LIBS += -litkvnl_inst
    LIBS += -litkzlib
  endif
endif



# The defines for each configuration.
ifeq ($(MAKE_UNAME),MacX)
  ifeq ($(MAKE_CFG),Debug)
    DEFINES += -DQT_THREAD_SUPPORT
    DEFINES += -DQT_CLEAN_NAMESPACE
    DEFINES += -DTGS_OIV
    DEFINES += -DAMIRA_RELEASE
    DEFINES += -DFORTRAN_UNDERLINE
    DEFINES += -D_REENTRANT
    DEFINES += -DHAVE_UNISTD_H
    DEFINES += -DHX_OS_MACX
    DEFINES += -DNEWSTYLE_IOSTREAM
    DEFINES += -DHX_NO_MATHF
    DEFINES += -DHX_HAS_STD
    DEFINES += -DHX_HAS_STDCOMPLEX
    DEFINES += -DHX_HAS_STDIOSTREAM
    DEFINES += -DHX_NO_X11
    DEFINES += -DUSE_COMPAT_CONST
    DEFINES += -DUNICODE_CHECK
    DEFINES += -DOIV_MULTI_THREADS
  endif
  ifeq ($(MAKE_CFG),Optimize)
    DEFINES += -DQT_THREAD_SUPPORT
    DEFINES += -DQT_CLEAN_NAMESPACE
    DEFINES += -DTGS_OIV
    DEFINES += -DAMIRA_RELEASE
    DEFINES += -DFORTRAN_UNDERLINE
    DEFINES += -D_REENTRANT
    DEFINES += -DHAVE_UNISTD_H
    DEFINES += -DHX_OS_MACX
    DEFINES += -DNEWSTYLE_IOSTREAM
    DEFINES += -DHX_NO_MATHF
    DEFINES += -DHX_HAS_STD
    DEFINES += -DHX_HAS_STDCOMPLEX
    DEFINES += -DHX_HAS_STDIOSTREAM
    DEFINES += -DHX_NO_X11
    DEFINES += -DUSE_COMPAT_CONST
    DEFINES += -DUNICODE_CHECK
    DEFINES += -DOIV_MULTI_THREADS
  endif
endif

CXXFLAGS += $(DEFINES)
CFLAGS   += $(DEFINES)

# The package tag.
CXXFLAGS += -DPACKAGEID=amirapackage_Obj_Importer
# Copy files in SHARE*.
$(PRODUCTROOT)/share/resources/Obj_Importer.rc: share/resources/Obj_Importer.rc
	@echo "    Copying $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(COPY_CMD) $< $@
	$(QUIET)chmod u+w $@

COPY += $(PRODUCTROOT)/share/resources/Obj_Importer.rc


##### Encrypting files in SHARESECURE*.

#
# Architectur specific copying and prepacked expansion might follow.
#
# Qt's uic targets.

# Make the OBJS dependent on the results of UIC to ensure that
# the headers resulting from UIC are available during compilation.
# The headers are stored in UICOUTPUT, which is used in the cpp rules below.
UICOUTPUT = $(addprefix $(INTERMEDIATEDIR)/, )



# Qt's moc targets.


# Qt's qrc targets.


# Visage's resource compiler targets.



# Gsoap targets.

# Make the OBJS dependent on the results of GSOAP.
# This ensures that the outputs of the gsoap compiler are available
# during compilation.
GSOAPOUTPUT = $(addprefix $(INTERMEDIATEDIR)/, )



# CUDA targets.


# The C and CPP targets.
$(INTERMEDIATEDIR)/obj_importer.o: obj_importer.cpp $(UICOUTPUT) $(GSOAPOUTPUT) $(ROCOUTPUT) $(filter %.h, $(COPY))
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/obj_importer.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/obj_importer.d: obj_importer.cpp $(UICOUTPUT) $(GSOAPOUTPUT) $(ROCOUTPUT) $(filter %.h, $(COPY))
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/obj_importer.d
endif

$(INTERMEDIATEDIR)/version.o: version.cpp $(UICOUTPUT) $(GSOAPOUTPUT) $(ROCOUTPUT) $(filter %.h, $(COPY))
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/version.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/version.d: version.cpp $(UICOUTPUT) $(GSOAPOUTPUT) $(ROCOUTPUT) $(filter %.h, $(COPY))
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/version.d
endif




#
# Architecture specific source files.
#
ifeq ($(MAKE_UNAME),MacX)
  ifeq ($(MAKE_CFG),Debug)
  endif
  ifeq ($(MAKE_CFG),Optimize)
  endif
endif


# The bison targets:
#  - BISONSRC must match xxx.y and xxx.l for flex.
#

#
# Flex only targets (w/o bison).
#

#
# The main targets.
#
lib: $(LIBDIR)/lib$(TARGET).$(SHARED_EXT)

$(LIBDIR)/lib$(TARGET).$(SHARED_EXT): $(OBJS)
	@echo "    [$(MAKE_CFG)] Linking shared library $@"
	@mkdir -p $(@D)
	@-$(RM) $@
	$(QUIET)$(LINK_SHARED) $(OBJS) -o $@ -L$(LIBDIR) $(LIBS)
	@if [ -x "$(TAGLIB)" ] ; then "$(TAGLIB)" -update $@ ;  else echo "WARNING: missing taglib, cannot patch target" ; fi
	@touch $(LIBDIR)


copy: $(COPY)

# 'make clean' removes intermediate directory and files copied.
clean:
	@echo "    [$(MAKE_CFG)] Removing intermediate directory"
	$(QUIET)rm -rf $(INTERMEDIATEDIR)
	$(QUIET)rm -f $(BUILDROOT)/obj/$(ARCH)/Obj_Importer.lastbuild
	@echo "    [$(MAKE_CFG)] Removing results"
	$(QUIET)rm -f $(BINDIR)/$(TARGET)
	$(QUIET)rm -f $(LIBDIR)/lib$(TARGET).$(SHARED_EXT)
	$(QUIET)rm -f $(LIBDIR)/_$(TARGET).$(PYTHON_EXT)
	@if [ $(words $(COPY)) -gt 100000 ] ; then echo "Warning: COPY lists $(words $(COPY)) files, but 'make clean' will delete only 100000 files."; fi
	@rm -f $(wordlist 1, 500, $(COPY))
	@rm -f $(wordlist 501, 1000, $(COPY))
	@rm -f $(wordlist 1001, 1500, $(COPY))
	@rm -f $(wordlist 1501, 2000, $(COPY))
	@rm -f $(wordlist 2001, 2500, $(COPY))
	@rm -f $(wordlist 2501, 3000, $(COPY))
	@rm -f $(wordlist 3001, 3500, $(COPY))
	@rm -f $(wordlist 3501, 4000, $(COPY))
	@rm -f $(wordlist 4001, 4500, $(COPY))
	@rm -f $(wordlist 4501, 5000, $(COPY))
	@rm -f $(wordlist 5001, 5500, $(COPY))
	@rm -f $(wordlist 5501, 6000, $(COPY))
	@rm -f $(wordlist 6001, 6500, $(COPY))
	@rm -f $(wordlist 6501, 7000, $(COPY))
	@rm -f $(wordlist 7001, 7500, $(COPY))
	@rm -f $(wordlist 7501, 8000, $(COPY))
	@rm -f $(wordlist 8001, 8500, $(COPY))
	@rm -f $(wordlist 8501, 9000, $(COPY))
	@rm -f $(wordlist 9001, 9500, $(COPY))
	@rm -f $(wordlist 9501, 10000, $(COPY))
	@rm -f $(wordlist 10001, 10500, $(COPY))
	@rm -f $(wordlist 10501, 11000, $(COPY))
	@rm -f $(wordlist 11001, 11500, $(COPY))
	@rm -f $(wordlist 11501, 12000, $(COPY))
	@rm -f $(wordlist 12001, 12500, $(COPY))
	@rm -f $(wordlist 12501, 13000, $(COPY))
	@rm -f $(wordlist 13001, 13500, $(COPY))
	@rm -f $(wordlist 13501, 14000, $(COPY))
	@rm -f $(wordlist 14001, 14500, $(COPY))
	@rm -f $(wordlist 14501, 15000, $(COPY))
	@rm -f $(wordlist 15001, 15500, $(COPY))
	@rm -f $(wordlist 15501, 16000, $(COPY))
	@rm -f $(wordlist 16001, 16500, $(COPY))
	@rm -f $(wordlist 16501, 17000, $(COPY))
	@rm -f $(wordlist 17001, 17500, $(COPY))
	@rm -f $(wordlist 17501, 18000, $(COPY))
	@rm -f $(wordlist 18001, 18500, $(COPY))
	@rm -f $(wordlist 18501, 19000, $(COPY))
	@rm -f $(wordlist 19001, 19500, $(COPY))
	@rm -f $(wordlist 19501, 20000, $(COPY))
	@rm -f $(wordlist 20001, 20500, $(COPY))
	@rm -f $(wordlist 20501, 21000, $(COPY))
	@rm -f $(wordlist 21001, 21500, $(COPY))
	@rm -f $(wordlist 21501, 22000, $(COPY))
	@rm -f $(wordlist 22001, 22500, $(COPY))
	@rm -f $(wordlist 22501, 23000, $(COPY))
	@rm -f $(wordlist 23001, 23500, $(COPY))
	@rm -f $(wordlist 23501, 24000, $(COPY))
	@rm -f $(wordlist 24001, 24500, $(COPY))
	@rm -f $(wordlist 24501, 25000, $(COPY))
	@rm -f $(wordlist 25001, 25500, $(COPY))
	@rm -f $(wordlist 25501, 26000, $(COPY))
	@rm -f $(wordlist 26001, 26500, $(COPY))
	@rm -f $(wordlist 26501, 27000, $(COPY))
	@rm -f $(wordlist 27001, 27500, $(COPY))
	@rm -f $(wordlist 27501, 28000, $(COPY))
	@rm -f $(wordlist 28001, 28500, $(COPY))
	@rm -f $(wordlist 28501, 29000, $(COPY))
	@rm -f $(wordlist 29001, 29500, $(COPY))
	@rm -f $(wordlist 29501, 30000, $(COPY))
	@rm -f $(wordlist 30001, 30500, $(COPY))
	@rm -f $(wordlist 30501, 31000, $(COPY))
	@rm -f $(wordlist 31001, 31500, $(COPY))
	@rm -f $(wordlist 31501, 32000, $(COPY))
	@rm -f $(wordlist 32001, 32500, $(COPY))
	@rm -f $(wordlist 32501, 33000, $(COPY))
	@rm -f $(wordlist 33001, 33500, $(COPY))
	@rm -f $(wordlist 33501, 34000, $(COPY))
	@rm -f $(wordlist 34001, 34500, $(COPY))
	@rm -f $(wordlist 34501, 35000, $(COPY))
	@rm -f $(wordlist 35001, 35500, $(COPY))
	@rm -f $(wordlist 35501, 36000, $(COPY))
	@rm -f $(wordlist 36001, 36500, $(COPY))
	@rm -f $(wordlist 36501, 37000, $(COPY))
	@rm -f $(wordlist 37001, 37500, $(COPY))
	@rm -f $(wordlist 37501, 38000, $(COPY))
	@rm -f $(wordlist 38001, 38500, $(COPY))
	@rm -f $(wordlist 38501, 39000, $(COPY))
	@rm -f $(wordlist 39001, 39500, $(COPY))
	@rm -f $(wordlist 39501, 40000, $(COPY))
	@rm -f $(wordlist 40001, 40500, $(COPY))
	@rm -f $(wordlist 40501, 41000, $(COPY))
	@rm -f $(wordlist 41001, 41500, $(COPY))
	@rm -f $(wordlist 41501, 42000, $(COPY))
	@rm -f $(wordlist 42001, 42500, $(COPY))
	@rm -f $(wordlist 42501, 43000, $(COPY))
	@rm -f $(wordlist 43001, 43500, $(COPY))
	@rm -f $(wordlist 43501, 44000, $(COPY))
	@rm -f $(wordlist 44001, 44500, $(COPY))
	@rm -f $(wordlist 44501, 45000, $(COPY))
	@rm -f $(wordlist 45001, 45500, $(COPY))
	@rm -f $(wordlist 45501, 46000, $(COPY))
	@rm -f $(wordlist 46001, 46500, $(COPY))
	@rm -f $(wordlist 46501, 47000, $(COPY))
	@rm -f $(wordlist 47001, 47500, $(COPY))
	@rm -f $(wordlist 47501, 48000, $(COPY))
	@rm -f $(wordlist 48001, 48500, $(COPY))
	@rm -f $(wordlist 48501, 49000, $(COPY))
	@rm -f $(wordlist 49001, 49500, $(COPY))
	@rm -f $(wordlist 49501, 50000, $(COPY))
	@rm -f $(wordlist 50001, 50500, $(COPY))
	@rm -f $(wordlist 50501, 51000, $(COPY))
	@rm -f $(wordlist 51001, 51500, $(COPY))
	@rm -f $(wordlist 51501, 52000, $(COPY))
	@rm -f $(wordlist 52001, 52500, $(COPY))
	@rm -f $(wordlist 52501, 53000, $(COPY))
	@rm -f $(wordlist 53001, 53500, $(COPY))
	@rm -f $(wordlist 53501, 54000, $(COPY))
	@rm -f $(wordlist 54001, 54500, $(COPY))
	@rm -f $(wordlist 54501, 55000, $(COPY))
	@rm -f $(wordlist 55001, 55500, $(COPY))
	@rm -f $(wordlist 55501, 56000, $(COPY))
	@rm -f $(wordlist 56001, 56500, $(COPY))
	@rm -f $(wordlist 56501, 57000, $(COPY))
	@rm -f $(wordlist 57001, 57500, $(COPY))
	@rm -f $(wordlist 57501, 58000, $(COPY))
	@rm -f $(wordlist 58001, 58500, $(COPY))
	@rm -f $(wordlist 58501, 59000, $(COPY))
	@rm -f $(wordlist 59001, 59500, $(COPY))
	@rm -f $(wordlist 59501, 60000, $(COPY))
	@rm -f $(wordlist 60001, 60500, $(COPY))
	@rm -f $(wordlist 60501, 61000, $(COPY))
	@rm -f $(wordlist 61001, 61500, $(COPY))
	@rm -f $(wordlist 61501, 62000, $(COPY))
	@rm -f $(wordlist 62001, 62500, $(COPY))
	@rm -f $(wordlist 62501, 63000, $(COPY))
	@rm -f $(wordlist 63001, 63500, $(COPY))
	@rm -f $(wordlist 63501, 64000, $(COPY))
	@rm -f $(wordlist 64001, 64500, $(COPY))
	@rm -f $(wordlist 64501, 65000, $(COPY))
	@rm -f $(wordlist 65001, 65500, $(COPY))
	@rm -f $(wordlist 65501, 66000, $(COPY))
	@rm -f $(wordlist 66001, 66500, $(COPY))
	@rm -f $(wordlist 66501, 67000, $(COPY))
	@rm -f $(wordlist 67001, 67500, $(COPY))
	@rm -f $(wordlist 67501, 68000, $(COPY))
	@rm -f $(wordlist 68001, 68500, $(COPY))
	@rm -f $(wordlist 68501, 69000, $(COPY))
	@rm -f $(wordlist 69001, 69500, $(COPY))
	@rm -f $(wordlist 69501, 70000, $(COPY))
	@rm -f $(wordlist 70001, 70500, $(COPY))
	@rm -f $(wordlist 70501, 71000, $(COPY))
	@rm -f $(wordlist 71001, 71500, $(COPY))
	@rm -f $(wordlist 71501, 72000, $(COPY))
	@rm -f $(wordlist 72001, 72500, $(COPY))
	@rm -f $(wordlist 72501, 73000, $(COPY))
	@rm -f $(wordlist 73001, 73500, $(COPY))
	@rm -f $(wordlist 73501, 74000, $(COPY))
	@rm -f $(wordlist 74001, 74500, $(COPY))
	@rm -f $(wordlist 74501, 75000, $(COPY))
	@rm -f $(wordlist 75001, 75500, $(COPY))
	@rm -f $(wordlist 75501, 76000, $(COPY))
	@rm -f $(wordlist 76001, 76500, $(COPY))
	@rm -f $(wordlist 76501, 77000, $(COPY))
	@rm -f $(wordlist 77001, 77500, $(COPY))
	@rm -f $(wordlist 77501, 78000, $(COPY))
	@rm -f $(wordlist 78001, 78500, $(COPY))
	@rm -f $(wordlist 78501, 79000, $(COPY))
	@rm -f $(wordlist 79001, 79500, $(COPY))
	@rm -f $(wordlist 79501, 80000, $(COPY))
	@rm -f $(wordlist 80001, 80500, $(COPY))
	@rm -f $(wordlist 80501, 81000, $(COPY))
	@rm -f $(wordlist 81001, 81500, $(COPY))
	@rm -f $(wordlist 81501, 82000, $(COPY))
	@rm -f $(wordlist 82001, 82500, $(COPY))
	@rm -f $(wordlist 82501, 83000, $(COPY))
	@rm -f $(wordlist 83001, 83500, $(COPY))
	@rm -f $(wordlist 83501, 84000, $(COPY))
	@rm -f $(wordlist 84001, 84500, $(COPY))
	@rm -f $(wordlist 84501, 85000, $(COPY))
	@rm -f $(wordlist 85001, 85500, $(COPY))
	@rm -f $(wordlist 85501, 86000, $(COPY))
	@rm -f $(wordlist 86001, 86500, $(COPY))
	@rm -f $(wordlist 86501, 87000, $(COPY))
	@rm -f $(wordlist 87001, 87500, $(COPY))
	@rm -f $(wordlist 87501, 88000, $(COPY))
	@rm -f $(wordlist 88001, 88500, $(COPY))
	@rm -f $(wordlist 88501, 89000, $(COPY))
	@rm -f $(wordlist 89001, 89500, $(COPY))
	@rm -f $(wordlist 89501, 90000, $(COPY))
	@rm -f $(wordlist 90001, 90500, $(COPY))
	@rm -f $(wordlist 90501, 91000, $(COPY))
	@rm -f $(wordlist 91001, 91500, $(COPY))
	@rm -f $(wordlist 91501, 92000, $(COPY))
	@rm -f $(wordlist 92001, 92500, $(COPY))
	@rm -f $(wordlist 92501, 93000, $(COPY))
	@rm -f $(wordlist 93001, 93500, $(COPY))
	@rm -f $(wordlist 93501, 94000, $(COPY))
	@rm -f $(wordlist 94001, 94500, $(COPY))
	@rm -f $(wordlist 94501, 95000, $(COPY))
	@rm -f $(wordlist 95001, 95500, $(COPY))
	@rm -f $(wordlist 95501, 96000, $(COPY))
	@rm -f $(wordlist 96001, 96500, $(COPY))
	@rm -f $(wordlist 96501, 97000, $(COPY))
	@rm -f $(wordlist 97001, 97500, $(COPY))
	@rm -f $(wordlist 97501, 98000, $(COPY))
	@rm -f $(wordlist 98001, 98500, $(COPY))
	@rm -f $(wordlist 98501, 99000, $(COPY))
	@rm -f $(wordlist 99001, 99500, $(COPY))
	@rm -f $(wordlist 99501, 100000, $(COPY))


# 'make dep' generates dependencies from scratch
dep: $(DEPS)

# 'make depclean' removes all automatic dependencies
depclean:
	@echo "    [$(MAKE_CFG)] Removing all automatic dependencies"
	@rm -f $(INTERMEDIATEDIR)/*.d


#
# Check if current architecture is supported.
#
ifneq ($(filter MacX, $(MAKE_UNAME)), $(MAKE_UNAME))
	$(error this makefile is not generated to be used on $(MAKE_UNAME), use --archs during createBuildSystem run)
endif
